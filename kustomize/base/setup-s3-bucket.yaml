apiVersion: batch/v1
kind: Job
metadata:
  name: setup-s3-job  
  annotations:
    argocd.argoproj.io/hook: PostSync  # Runs after sync is complete
    argocd.argoproj.io/sync-wave: "1"  # Ensures job runs after MinIO
spec:
  template:
    metadata:
      name: setup-s3-job
    spec:
      containers:
      - name: setup-s3
        image: docker.io/amazon/aws-cli:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            until curl --silent --head --fail http://minio:9000/minio/health/live; do
                echo "Waiting for MinIO to be ready..."
                sleep 5
            done
            
            # Check if the bucket exists before creating it
            if ! aws s3 ls s3://pipeline-storage; then
              echo "Creating pipeline-storage bucket..."
              aws s3 mb s3://pipeline-storage
            else
              echo "pipeline-storage bucket already exists."
            fi
            
            if ! aws s3 ls s3://my-storage; then
              echo "Creating my-storage bucket..."
              aws s3 mb s3://my-storage
            else
              echo "my-storage bucket already exists."
            fi
        envFrom: 
          - secretRef:
              name: aws-connection-my-storage
      restartPolicy: Never    
  backoffLimit: 4
